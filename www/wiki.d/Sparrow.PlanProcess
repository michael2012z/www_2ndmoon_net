version=pmwiki-2.2.6 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows NT 6.0) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.77 Safari/534.24
author=
charset=UTF-8
csum=
ctime=1305012311
host=202.96.60.37
name=Sparrow.PlanProcess
rev=20
targets=
text=[[%3c%3c]]%0a----%0a!!Iteration 1 %0a%0a%0a(:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a(:cellnr colspan=2 align=center:)%0a!!!Virtual memory layout%0a(:cellnr align=left:)%0a* Draw the map of process memory layout%0a(:tableend:)%0a%0a(:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a(:cellnr colspan=2 align=center:)%0a!!!Virtual memory data structure%0a(:cellnr align=left:)%0a* Define minimal data structure for virtual memory management of process%0a** task_struct%0a** mm_struct%0a** vm_area_struct%0a(:tableend:)%0a%0a(:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a(:cellnr colspan=2 align=center:)%0a!!!vm_area_struct%0a(:cellnr align=left:)%0a* Define the list of vm_area_struct in mm_struct%0a* Define empty function to operate vm_area_struct:%0a** find_vma%0a** add_vma%0a** remove_vma%0a(:tableend:)%0a%0a(:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a(:cellnr colspan=2 align=center:)%0a!!!ELF parsing%0a(:cellnr align=left:)%0a* Determine the way to load ELF file%0a* Define empty function to parse ELF%0a(:tableend:)%0a%0a[[%3c%3c]]%0a----%0a!!Iteration 2%0a%0a%0a(:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a(:cellnr colspan=2 align=center:)%0a!!!vm_area_struct%0a(:cellnr align=left:)%0a* Implement the function to operate vm_area_struct:%0a** find_vma%0a** add_vma%0a** remove_vma%0a(:tableend:)%0a%0a(:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a(:cellnr colspan=2 align=center:)%0a!!!ELF parsing%0a(:cellnr align=left:)%0a* Implement the function to parse ELF%0a(:tableend:)%0a%0a(:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a(:cellnr colspan=2 align=center:)%0a!!!do_mmap%0a(:cellnr align=left:)%0a* Implement the function do_mmap()%0a(:tableend:)%0a%0a%0a[[%3c%3c]]%0a----%0a!!Iteration 3%0a%0a(:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a(:cellnr colspan=2 align=center:)%0a!!!Define process list%0a(:cellnr align=left:)%0a* Define process list%0a* Clean up all process related data structure%0a(:tableend:)%0a%0a%0a(:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a(:cellnr colspan=2 align=center:)%0a!!!Load in user programme%0a(:cellnr align=left:)%0a* Build very simple user program%0a* Store them in specified location of Skyeye%0a* Modify memory configuration to store user program%0a* Read user program in during system starting%0a(:tableend:)%0a%0a%0a(:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a(:cellnr colspan=2 align=center:)%0a!!!Debuging ELF parer%0a(:cellnr align=left:)%0a* Parse ELF file, build VMA list%0a(:tableend:)%0a%0a%0a%0a[[%3c%3c]]%0a----%0a!!Iteration 4%0a%0a%0a(:table border=1 width=50%25 align=center bgcolor=#22ff00 cellspacing=0 :)%0a(:cellnr colspan=2 align=center:)%0a!!!Process page table setting study%0a(:cellnr align=left:)%0a* Study where is the process table (pgd) initialized.%0a(:tableend:)%0a%0a%0a(:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a(:cellnr colspan=2 align=center:)%0a!!!Design interface to set process page table%0a(:cellnr align=left:)%0a* Design data structure%0a* Design function interface%0a(:tableend:)%0a%0a%0a(:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a(:cellnr colspan=2 align=center:)%0a!!!Implement code of setting process page table%0a(:cellnr align=left:)%0a* Finish base code%0a* Debug%0a(:tableend:)%0a%0a[[%3c%3c]]%0a----%0a!!Iteration 4%0a%0a%0a(:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a(:cellnr colspan=2 align=center:)%0a!!!Context switching study%0a(:cellnr align=left:)%0a* Learn how to switch to user program%0a* Learn how to switch between different user program%0a* Learn how is the scheduler designed%0a(:tableend:)%0a%0a%0a(:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a(:cellnr colspan=2 align=center:)%0a!!!Scheduler framework design%0a(:cellnr align=left:)%0a* Design the empty interface of scheduler%0a(:tableend:)%0a%0a%0a[[%3c%3c]]%0a----%0a!!Iteration 5%0a%0a%0a(:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a(:cellnr colspan=2 align=center:)%0a!!!Scheduler%0a(:cellnr align=left:)%0a* Implement the scheduler%0a(:tableend:)%0a%0a%0a%0a[[%3c%3c]]%0a----%0a!!Iteration 6%0a%0a%0a(:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a(:cellnr colspan=2 align=center:)%0a!!!Page fault%0a(:cellnr align=left:)%0a* Page fault%0a(:tableend:)%0a%0a
time=1307529950
author:1307529950=
diff:1307529950:1306724319:=76c76%0a%3c (:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a---%0a> (:table border=1 width=50%25 align=center bgcolor=#22ff00 cellspacing=0 :)%0a85c85%0a%3c (:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a---%0a> (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a96c96%0a%3c (:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a---%0a> (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a103,133d102%0a%3c %0a%3c %0a%3c [[%3c%3c]]%0a%3c ----%0a%3c !!Iteration 4%0a%3c %0a%3c %0a%3c (:table border=1 width=50%25 align=center bgcolor=#22ff00 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c !!!Process page table setting study%0a%3c (:cellnr align=left:)%0a%3c * Study where is the process table (pgd) initialized.%0a%3c (:tableend:)%0a%3c %0a%3c %0a%3c (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c !!!Design interface to set process page table%0a%3c (:cellnr align=left:)%0a%3c * Design data structure%0a%3c * Design function interface%0a%3c (:tableend:)%0a%3c %0a%3c %0a%3c (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c !!!Implement code of setting process page table%0a%3c (:cellnr align=left:)%0a%3c * Finish base code%0a%3c * Debug%0a%3c (:tableend:)%0a
host:1307529950=202.96.60.37
author:1306724319=
diff:1306724319:1305802456:=47c47%0a%3c (:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a---%0a> (:table border=1 width=50%25 align=center bgcolor=#22ff00 cellspacing=0 :)%0a57c57%0a%3c (:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a---%0a> (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a64c64%0a%3c (:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a---%0a> (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a71d70%0a%3c %0a76c75,76%0a%3c (:table border=1 width=50%25 align=center bgcolor=#22ff00 cellspacing=0 :)%0a---%0a> %0a> (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a78c78%0a%3c !!!Define process list%0a---%0a> !!!Context switching study%0a80,81c80,82%0a%3c * Define process list%0a%3c * Clean up all process related data structure%0a---%0a> * Learn how to switch to user program%0a> * Learn how to switch between different user program%0a> * Learn how is the scheduler designed%0a87c88%0a%3c !!!Load in user programme%0a---%0a> !!!Scheduler framework design%0a89,92c90%0a%3c * Build very simple user program%0a%3c * Store them in specified location of Skyeye%0a%3c * Modify memory configuration to store user program%0a%3c * Read user program in during system starting%0a---%0a> * Design the empty interface of scheduler%0a95a94,98%0a> [[%3c%3c]]%0a> ----%0a> !!Iteration 4%0a> %0a> %0a98c101%0a%3c !!!Debuging ELF parer%0a---%0a> !!!Scheduler%0a100c103%0a%3c * Parse ELF file, build VMA list%0a---%0a> * Implement the scheduler%0a103a107%0a> %0a106,143c110,112%0a%3c !!Iteration 4%0a%3c %0a%3c %0a%3c (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c !!!Context switching study%0a%3c (:cellnr align=left:)%0a%3c * Learn how to switch to user program%0a%3c * Learn how to switch between different user program%0a%3c * Learn how is the scheduler designed%0a%3c (:tableend:)%0a%3c %0a%3c %0a%3c (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c !!!Scheduler framework design%0a%3c (:cellnr align=left:)%0a%3c * Design the empty interface of scheduler%0a%3c (:tableend:)%0a%3c %0a%3c %0a%3c [[%3c%3c]]%0a%3c ----%0a%3c !!Iteration 5%0a%3c %0a%3c %0a%3c (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c !!!Scheduler%0a%3c (:cellnr align=left:)%0a%3c * Implement the scheduler%0a%3c (:tableend:)%0a%3c %0a%3c %0a%3c %0a%3c [[%3c%3c]]%0a%3c ----%0a%3c !!Iteration 6%0a---%0a> !!Iteration 5%0a> %0a> %0a
host:1306724319=202.96.60.37
author:1305802456=
diff:1305802456:1305801992:=66c66%0a%3c !!!do_mmap%0a---%0a> !!!ELF parsing%0a72,118c72%0a%3c ----%0a%3c !!Iteration 3%0a%3c %0a%3c %0a%3c (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c !!!Context switching study%0a%3c (:cellnr align=left:)%0a%3c * Learn how to switch to user program%0a%3c * Learn how to switch between different user program%0a%3c * Learn how is the scheduler designed%0a%3c (:tableend:)%0a%3c %0a%3c %0a%3c (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c !!!Scheduler framework design%0a%3c (:cellnr align=left:)%0a%3c * Design the empty interface of scheduler%0a%3c (:tableend:)%0a%3c %0a%3c %0a%3c [[%3c%3c]]%0a%3c ----%0a%3c !!Iteration 4%0a%3c %0a%3c %0a%3c (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c !!!Scheduler%0a%3c (:cellnr align=left:)%0a%3c * Implement the scheduler%0a%3c (:tableend:)%0a%3c %0a%3c %0a%3c %0a%3c [[%3c%3c]]%0a%3c ----%0a%3c !!Iteration 5%0a%3c %0a%3c %0a%3c (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c !!!Page fault%0a%3c (:cellnr align=left:)%0a%3c * Page fault%0a%3c (:tableend:)%0a---%0a> %0a
host:1305802456=202.96.60.37
author:1305801992=
diff:1305801992:1305801852:=62,68d61%0a%3c (:tableend:)%0a%3c %0a%3c (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c !!!ELF parsing%0a%3c (:cellnr align=left:)%0a%3c * Implement the function do_mmap()%0a
host:1305801992=202.96.60.37
author:1305801852=
diff:1305801852:1305801669:=49c49%0a%3c !!!vm_area_struct%0a---%0a> !!!Virtual memory data structure%0a51,54c51,54%0a%3c * Implement the function to operate vm_area_struct:%0a%3c ** find_vma%0a%3c ** add_vma%0a%3c ** remove_vma%0a---%0a> * Define minimal data structure for virtual memory management of process%0a> ** task_struct%0a> ** mm_struct%0a> ** vm_area_struct%0a59c59%0a%3c !!!ELF parsing%0a---%0a> !!!vm_area_struct%0a61c61,73%0a%3c * Implement the function to parse ELF%0a---%0a> * Define the list of vm_area_struct in mm_struct%0a> * Define empty function to operate vm_area_struct:%0a> ** find_vma%0a> ** add_vma%0a> ** remove_vma%0a> (:tableend:)%0a> %0a> (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a> (:cellnr colspan=2 align=center:)%0a> !!!ELF parsing%0a> (:cellnr align=left:)%0a> * Determine the way to load ELF file%0a> * Define empty function to parse ELF%0a
host:1305801852=202.96.60.37
author:1305801669=
diff:1305801669:1305800683:=34c34%0a%3c (:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a---%0a> (:table border=1 width=50%25 align=center bgcolor=#22ff00 cellspacing=0 :)%0a47c47%0a%3c (:table border=1 width=50%25 align=center bgcolor=#22ff00 cellspacing=0 :)%0a---%0a> (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a49c49%0a%3c !!!Virtual memory data structure%0a---%0a> !!!vm_area_struct%0a51,54c51,53%0a%3c * Define minimal data structure for virtual memory management of process%0a%3c ** task_struct%0a%3c ** mm_struct%0a%3c ** vm_area_struct%0a---%0a> * Port vm_area_struct structure from Linux%0a> * Port related operation function from Linux%0a> * Organize data structure to hold vm_area_struct%0a56a56,57%0a> [[%3c%3c]]%0a> %0a59c60%0a%3c !!!vm_area_struct%0a---%0a> !!!ELF parsing%0a61,65c62,65%0a%3c * Define the list of vm_area_struct in mm_struct%0a%3c * Define empty function to operate vm_area_struct:%0a%3c ** find_vma%0a%3c ** add_vma%0a%3c ** remove_vma%0a---%0a> * Prepare demo ELF executable file%0a> * On Skyeye emulator, put ELF files on specified location%0a> * Design data structure to record the address of ELF files%0a> * Parse the ELF files, organize vm_area_struct list%0a67,77d66%0a%3c %0a%3c (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c !!!ELF parsing%0a%3c (:cellnr align=left:)%0a%3c * Determine the way to load ELF file%0a%3c * Define empty function to parse ELF%0a%3c (:tableend:)%0a%3c %0a%3c [[%3c%3c]]%0a%3c %0a
host:1305801669=202.96.60.37
author:1305800683=
diff:1305800683:1305352465:=29,31c29,30%0a%3c ** find_vma%0a%3c ** add_vma%0a%3c ** remove_vma%0a---%0a> ** vma_add%0a> ** vma_merge%0a
host:1305800683=202.96.60.37
author:1305352465=
diff:1305352465:1305338421:=23c23%0a%3c (:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a---%0a> (:table border=1 width=50%25 align=center bgcolor=#22ff00 cellspacing=0 :)%0a33c33%0a%3c (:table border=1 width=50%25 align=center bgcolor=#22ff00 cellspacing=0 :)%0a---%0a> (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a
host:1305352465=180.109.230.80
author:1305338421=
diff:1305338421:1305338336:=3,5c3,5%0a%3c !!Iteration 1 %0a%3c %0a%3c %0a---%0a> !!Period 1 (Ongoing)%0a> %0a> %0a43c43%0a%3c !!Iteration 2%0a---%0a> !!Period 2%0a
host:1305338421=180.109.230.80
author:1305338336=
diff:1305338336:1305274775:=13c13%0a%3c (:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a---%0a> (:table border=1 width=50%25 align=center bgcolor=#22ff00 cellspacing=0 :)%0a23c23%0a%3c (:table border=1 width=50%25 align=center bgcolor=#22ff00 cellspacing=0 :)%0a---%0a> (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a
host:1305338336=180.109.230.80
author:1305274775=
diff:1305274775:1305266421:=6c6%0a%3c (:table border=1 width=50%25 align=center bgcolor=#fcf91f cellspacing=0 :)%0a---%0a> (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a13c13%0a%3c (:table border=1 width=50%25 align=center bgcolor=#22ff00 cellspacing=0 :)%0a---%0a> (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a
host:1305274775=202.96.60.37
author:1305266421=
diff:1305266421:1305190375:=5d4%0a%3c %0a8c7%0a%3c !!!Virtual memory layout%0a---%0a> !!!Virtual memory data structure%0a10c9,12%0a%3c * Draw the map of process memory layout%0a---%0a> * Define minimal data structure for virtual memory management of process%0a> ** task_struct%0a> ** mm_struct%0a> ** vm_area_struct%0a15c17%0a%3c !!!Virtual memory data structure%0a---%0a> !!!vm_area_struct%0a17,20c19,22%0a%3c * Define minimal data structure for virtual memory management of process%0a%3c ** task_struct%0a%3c ** mm_struct%0a%3c ** vm_area_struct%0a---%0a> * Define the list of vm_area_struct in mm_struct%0a> * Define empty function to operate vm_area_struct:%0a> ** vma_add%0a> ** vma_merge%0a25c27%0a%3c !!!vm_area_struct%0a---%0a> !!!ELF parsing%0a27,30c29,30%0a%3c * Define the list of vm_area_struct in mm_struct%0a%3c * Define empty function to operate vm_area_struct:%0a%3c ** vma_add%0a%3c ** vma_merge%0a---%0a> * Determine the way to load ELF file%0a> * Define empty function to parse ELF%0a33,40d32%0a%3c (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c !!!ELF parsing%0a%3c (:cellnr align=left:)%0a%3c * Determine the way to load ELF file%0a%3c * Define empty function to parse ELF%0a%3c (:tableend:)%0a%3c %0a44d35%0a%3c %0a
host:1305266421=202.96.60.37
author:1305190375=
diff:1305190375:1305190093:=3,4c3,4%0a%3c !!Period 1 (Ongoing)%0a%3c %0a---%0a> !!Period 1%0a> %0a23a24,25%0a> %0a> [[%3c%3c]]%0a
host:1305190375=202.96.60.37
author:1305190093=
diff:1305190093:1305188801:=7c7%0a%3c !!!Virtual memory data structure%0a---%0a> !!!vm_area_struct%0a9,12c9,11%0a%3c * Define minimal data structure for virtual memory management of process%0a%3c ** task_struct%0a%3c ** mm_struct%0a%3c ** vm_area_struct%0a---%0a> * Port vm_area_struct structure from Linux%0a> * Port related operation function from Linux%0a> * Organize data structure to hold vm_area_struct%0a14a14,15%0a> [[%3c%3c]]%0a> %0a17c18%0a%3c !!!vm_area_struct%0a---%0a> !!!ELF parsing%0a19,22c20,23%0a%3c * Define the list of vm_area_struct in mm_struct%0a%3c * Define empty function to operate vm_area_struct:%0a%3c ** vma_add%0a%3c ** vma_merge%0a---%0a> * Prepare demo ELF executable file%0a> * On Skyeye emulator, put ELF files on specified location%0a> * Design data structure to record the address of ELF files%0a> * Parse the ELF files, organize vm_area_struct list%0a25,33d25%0a%3c [[%3c%3c]]%0a%3c %0a%3c (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c !!!ELF parsing%0a%3c (:cellnr align=left:)%0a%3c * Determine the way to load ELF file%0a%3c * Define empty function to parse ELF%0a%3c (:tableend:)%0a
host:1305190093=202.96.60.37
author:1305188801=
diff:1305188801:1305016478:=2,4c2%0a%3c ----%0a%3c !!Period 1%0a%3c %0a---%0a> %0a7c5%0a%3c !!!vm_area_struct%0a---%0a> '''vm_area_struct'''%0a18,44c16%0a%3c !!!ELF parsing%0a%3c (:cellnr align=left:)%0a%3c * Prepare demo ELF executable file%0a%3c * On Skyeye emulator, put ELF files on specified location%0a%3c * Design data structure to record the address of ELF files%0a%3c * Parse the ELF files, organize vm_area_struct list%0a%3c (:tableend:)%0a%3c %0a%3c %0a%3c [[%3c%3c]]%0a%3c ----%0a%3c !!Period 2%0a%3c %0a%3c (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c !!!vm_area_struct%0a%3c (:cellnr align=left:)%0a%3c * Port vm_area_struct structure from Linux%0a%3c * Port related operation function from Linux%0a%3c * Organize data structure to hold vm_area_struct%0a%3c (:tableend:)%0a%3c %0a%3c [[%3c%3c]]%0a%3c %0a%3c (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c !!!ELF parsing%0a---%0a> '''ELF parsing'''%0a
host:1305188801=202.96.60.37
author:1305016478=
diff:1305016478:1305016413:=1,2d0%0a%3c [[%3c%3c]]%0a%3c %0a11a10%0a> [[%3c%3c]]%0a
host:1305016478=202.96.60.37
author:1305016413=
diff:1305016413:1305012516:=
host:1305016413=202.96.60.37
author:1305012516=
diff:1305012516:1305012438:=1c1%0a%3c (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a---%0a> (:table border=1 width=50%25 align=left bgcolor=#cccc99 cellspacing=0 :)%0a13c13%0a%3c (:table border=1 width=50%25 align=center bgcolor=#cccc99 cellspacing=0 :)%0a---%0a> (:table border=1 width=50%25 align=left bgcolor=#cccc99 cellspacing=0 :)%0a
host:1305012516=202.96.60.37
author:1305012438=
diff:1305012438:1305012311:=0a1,2%0a> %0a> %0a7d8%0a%3c * Organize data structure to hold vm_area_struct%0a10,12c11%0a%3c [[%3c%3c]]%0a%3c [[%3c%3c]]%0a%3c %0a---%0a> %0a15c14%0a%3c '''ELF parsing'''%0a---%0a> '''ELF format'''%0a20c19%0a%3c * Parse the ELF files, organize vm_area_struct list%0a---%0a> * Parse %0a
host:1305012438=202.96.60.37
author:1305012311=
diff:1305012311:1305012311:=1,21d0%0a%3c %0a%3c %0a%3c (:table border=1 width=50%25 align=left bgcolor=#cccc99 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c '''vm_area_struct'''%0a%3c (:cellnr align=left:)%0a%3c * Port vm_area_struct structure from Linux%0a%3c * Port related operation function from Linux%0a%3c (:tableend:)%0a%3c %0a%3c %0a%3c (:table border=1 width=50%25 align=left bgcolor=#cccc99 cellspacing=0 :)%0a%3c (:cellnr colspan=2 align=center:)%0a%3c '''ELF format'''%0a%3c (:cellnr align=left:)%0a%3c * Prepare demo ELF executable file%0a%3c * On Skyeye emulator, put ELF files on specified location%0a%3c * Design data structure to record the address of ELF files%0a%3c * Parse %0a%3c (:tableend:)%0a%3c %0a
host:1305012311=202.96.60.37
